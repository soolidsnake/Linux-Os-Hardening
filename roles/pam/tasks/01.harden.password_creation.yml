---

- name: Install libpam-pwquality.
  apt: name=libpam-pwquality state=latest
  become: yes
  when: ansible_os_family=='Debian'

- name: Install libpam-pwquality.
  yum: name=libpam-pwquality state=latest
  become: yes
  when: ansible_os_family=='RedHat'

- name: Allow 3 tries before sending back a failure.
  lineinfile:
    path: "/etc/pam.d/common-password"
    regexp: "pam_pwquality.so"
    line: 'password requisite pam_pwquality.so retry=3'
  register: change_state
  become: yes
  when: ansible_os_family=='Debian' and pam.allow_3_tries_before_failure


- name: Allow 3 tries before sending back a failure.
  lineinfile:
    path: "{{item.path}}"
    regexp: "pam_pwquality.so"
    line: 'password requisite pam_pwquality.so try_first_pass retry=3'
  with_items:
    - { path: '/etc/pam.d/password-auth'}
    - { path: '/etc/pam.d/system-auth'}
  register: change_state
  become: yes
  when: ansible_os_family=='RedHat' and pam.allow_3_tries_before_failure


#done
- set_fact:
    done_patch: "{{done_patch}} + ['|5.3.1.1| Allow 3 tries before sending back a failure']" 
  when: change_state.changed and pam.allow_3_tries_before_failure


#already done
- set_fact:
    already_done_patch: "{{already_done_patch}} + ['|5.3.1.1| Allow 3 tries before sending back a failure']" 
  when: not change_state.changed and pam.allow_3_tries_before_failure


#not done
- set_fact:
    not_done: "{{not_done}} + ['|5.3.1.1| Allow 3 tries before sending back a failure']"
  when: not pam.allow_3_tries_before_failure




- name: Set password policy by default to >
            password lenght >= 14
            must provide at least one digit
            must provide at least one uppercase character
            must provide at least one special character
            must provide at least one lowercase character
            change variables to meet your company password policy please
  lineinfile:
    path: "/etc/security/pwquality.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^minlen',  line: 'minlen = 14' }
    - { regexp: '^dcredit', line: 'dcredit = -1' }
    - { regexp: '^lcredit', line: 'lcredit = -1' }
    - { regexp: '^ocredit', line: 'ocredit = -1' }
    - { regexp: '^ucredit', line: 'ucredit = -1' }
  when: pam.set_policy
  register: change_state
  become: yes


#done
- set_fact:
    done_patch: "{{done_patch}} + ['|5.3.1.2| Ensure password creation requirements are configured']" 
  when: change_state.changed and pam.set_policy


#already done
- set_fact:
    already_done_patch: "{{already_done_patch}} + ['|5.3.1.2| Ensure password creation requirements are configured']" 
  when: not change_state.changed and pam.set_policy


#not done
- set_fact:
    not_done: "{{not_done}} + ['|5.3.1.2| Ensure password creation requirements are configured']"
  when: not pam.set_policy
